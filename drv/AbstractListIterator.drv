/*		 
 * Copyright (C) 2002-2013 Sebastiano Vigna 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 */


package PACKAGE;

/**  An abstract class facilitating the creation of type-specific {@linkplain java.util.ListIterator list iterators}.
 *
 * <P>This class provides trivial type-specific implementations of {@link
 * java.util.ListIterator#set(Object) set()} and {@link java.util.ListIterator#add(Object) add()} which
 * throw an {@link UnsupportedOperationException}. For primitive types, it also
 * provides a trivial implementation of {@link java.util.ListIterator#set(Object) set()} and {@link
 * java.util.ListIterator#add(Object) add()} that just invokes the type-specific one.
 * 
 *
 * @see java.util.ListIterator
 */

public abstract class KEY_ABSTRACT_LIST_ITERATOR KEY_GENERIC extends KEY_ABSTRACT_BIDI_ITERATOR KEY_GENERIC implements KEY_LIST_ITERATOR KEY_GENERIC {

	protected KEY_ABSTRACT_LIST_ITERATOR() {}

#if #keys(primitive)
	/** Delegates to the corresponding type-specific method. */
	public void set( KEY_GENERIC_CLASS ok ) { set( ok.KEY_VALUE() ); }
	/** Delegates to the corresponding type-specific method. */
	public void add( KEY_GENERIC_CLASS ok ) { add( ok.KEY_VALUE() ); }
#endif

	/** This method just throws an  {@link UnsupportedOperationException}. */
	public void set( KEY_GENERIC_TYPE k ) { throw new UnsupportedOperationException(); }
	/** This method just throws an  {@link UnsupportedOperationException}. */
	public void add( KEY_GENERIC_TYPE k ) { throw new UnsupportedOperationException(); }
}
